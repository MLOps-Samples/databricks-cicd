# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: "Person to greet"
        # Default value if no value is explicitly provided
        default: "World"
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    environment: Databricks_Azure_Test
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - name: Send greeting
        run: echo "Hello ${{ github.event.inputs.name }}"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.7

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          environment-file: environment.yml
          activate-environment: databricks_cicd
          python-version: 3.7

      - name: Lint
        shell: bash -l {0}
        run: |
          flake8
          black .

      - name: Run pytest
        env:
          DATABRICKS_URL: ${{ secrets.DATABRICKS_URL }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DATABRICKS_CLUSTERID: ${{ secrets.DATABRICKS_CLUSTERID }}
          DATABRICKS_WORKSPACE_PATH: ${{ secrets.DATABRICKS_WORKSPACE_PATH }}
          DATABRICKS_OUTFILE_PATH: "."
        shell: bash -l {0}
        run: |
          pytest --cache-clear --cov=src test/ 2>&1 | tee pytest-coverage.txt

      - name: Comment coverage
        uses: coroo/pytest-coverage-commentator@v1.0.2
        with:
          pytest-coverage: pytest-coverage.txt
